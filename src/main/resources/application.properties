spring.application.name=Authorization Server
server.port=9000
logging.level.org.springframework.security=trace
#spring.security.oauth2.authorizationserver.client.umaxcode.registration.client-id=oidc-client
#spring.security.oauth2.authorizationserver.client.umaxcode.registration.client-secret={noop}secret
#spring.security.oauth2.authorizationserver.client.umaxcode.registration.client-authentication-methods=client_secret_basic
#spring.security.oauth2.authorizationserver.client.umaxcode.registration.authorization-grant-types=client_credentials, authorization_code, refresh_token
#spring.security.oauth2.authorizationserver.client.umaxcode.registration.redirect-uris=http://127.0.0.1:8080/login/oauth2/code/umaxcode
#spring.security.oauth2.authorizationserver.client.umaxcode.registration.scopes=profile, openid
#spring.security.oauth2.authorizationserver.client.umaxcode.require-authorization-consent=true
# Client Registration ID
spring.security.oauth2.client.registration.google.client-id=803682622027-gm8ksfqkmq99a0cdscuamda6udjvlm4l.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
#spring.security.oauth2.client.registration.google.client-authentication-method=client_secret_basic
#spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
#spring.security.oauth2.client.registration.google.scope=openid,profile,email
#
## Provider Details (Google's default)
#spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
#spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
#spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
#spring.security.oauth2.client.provider.google.user-name-attribute=sub